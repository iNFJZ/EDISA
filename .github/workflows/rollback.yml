name: Rollback Deployment

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to rollback'
        required: true
        type: choice
        options:
        - staging
        - production
      version:
        description: 'Version to rollback to (leave empty for previous version)'
        required: false
        type: string

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  rollback:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Get available tags
      id: get-tags
      run: |
        # Get available tags from registry
        TAGS=$(docker run --rm -v /var/run/docker.sock:/var/run/docker.sock ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest 2>/dev/null || echo "")
        echo "available_tags=$TAGS" >> $GITHUB_OUTPUT

    - name: Determine rollback version
      id: rollback-version
      run: |
        if [ -n "${{ github.event.inputs.version }}" ]; then
          echo "version=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
        else
          # Get the previous version from git tags
          PREVIOUS_VERSION=$(git tag --sort=-version:refname | head -2 | tail -1)
          echo "version=$PREVIOUS_VERSION" >> $GITHUB_OUTPUT
        fi

    - name: Rollback staging environment
      if: github.event.inputs.environment == 'staging'
      run: |
        echo "Rolling back staging environment to version: ${{ steps.rollback-version.outputs.version }}"
        
        # Pull the specific version
        docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.rollback-version.outputs.version }}
        
        # Update docker-compose file to use the specific version
        sed -i "s/image: ${{ env.REGISTRY }}\/${{ env.IMAGE_NAME }}:develop/image: ${{ env.REGISTRY }}\/${{ env.IMAGE_NAME }}:${{ steps.rollback-version.outputs.version }}/g" docker-compose.staging.yml
        
        # Restart services
        docker-compose -f docker-compose.staging.yml down
        docker-compose -f docker-compose.staging.yml up -d
        
        echo "Staging rollback completed!"

    - name: Rollback production environment
      if: github.event.inputs.environment == 'production'
      run: |
        echo "Rolling back production environment to version: ${{ steps.rollback-version.outputs.version }}"
        
        # Pull the specific version
        docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.rollback-version.outputs.version }}
        
        # Update docker-compose file to use the specific version
        sed -i "s/image: ${{ env.REGISTRY }}\/${{ env.IMAGE_NAME }}:master/image: ${{ env.REGISTRY }}\/${{ env.IMAGE_NAME }}:${{ steps.rollback-version.outputs.version }}/g" docker-compose.production.yml
        
        # Restart services
        docker-compose -f docker-compose.production.yml down
        docker-compose -f docker-compose.production.yml up -d
        
        echo "Production rollback completed!"

    - name: Health check after rollback
      run: |
        echo "Performing health checks after rollback..."
        sleep 30
        
        if [ "${{ github.event.inputs.environment }}" == "staging" ]; then
          PORT="5051"
        else
          PORT="5052"
        fi
        
        # Check if services are running
        docker ps --filter "name=${{ github.event.inputs.environment }}" --format "table {{.Names}}\t{{.Status}}"
        
        # Basic health check for gateway
        curl -f http://localhost:$PORT/health || echo "Gateway health check failed"
        
        echo "Health checks completed!"

    - name: Create rollback tag
      if: success()
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git tag -a "rollback-${{ github.event.inputs.environment }}-$(date +'%Y.%m.%d-%H%M%S')" -m "Rollback to ${{ steps.rollback-version.outputs.version }} on ${{ github.event.inputs.environment }}"
        git push origin --tags

    - name: Notify rollback status
      if: always()
      run: |
        if [ "${{ job.status }}" == "success" ]; then
          echo "✅ Rollback to ${{ steps.rollback-version.outputs.version }} on ${{ github.event.inputs.environment }} successful!"
        else
          echo "❌ Rollback failed!"
        fi 