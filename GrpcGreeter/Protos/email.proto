syntax = "proto3";

option csharp_namespace = "GrpcGreeter";

package email;

// Email service definition
service EmailService {
  // Send email
  rpc SendEmail (SendEmailRequest) returns (SendEmailResponse);
  
  // Send registration notification
  rpc SendRegistrationNotification (RegistrationNotificationRequest) returns (SendEmailResponse);
  
  // Send password reset email
  rpc SendPasswordResetEmail (PasswordResetRequest) returns (SendEmailResponse);
  
  // Send change password notification
  rpc SendChangePasswordNotification (ChangePasswordNotificationRequest) returns (SendEmailResponse);
  
  // Send file event notification
  rpc SendFileEventNotification (FileEventNotificationRequest) returns (SendEmailResponse);
}

// Request/Response messages for email operations
message SendEmailRequest {
  string to = 1;
  string subject = 2;
  string body = 3;
  bool isHtml = 4;
  repeated EmailAttachment attachments = 5;
}

message SendEmailResponse {
  bool success = 1;
  string messageId = 2;
  string message = 3;
}

message EmailAttachment {
  string fileName = 1;
  bytes fileData = 2;
  string contentType = 3;
}

message RegistrationNotificationRequest {
  string email = 1;
  string firstName = 2;
  string lastName = 3;
  string activationLink = 4;
}

message PasswordResetRequest {
  string email = 1;
  string resetLink = 2;
  string firstName = 3;
}

message ChangePasswordNotificationRequest {
  string email = 1;
  string firstName = 2;
  string deviceInfo = 3;
  string ipAddress = 4;
  string timestamp = 5;
}

message FileEventNotificationRequest {
  string email = 1;
  string firstName = 2;
  string eventType = 3; // "upload", "download", "delete"
  string fileName = 4;
  string fileSize = 5;
  string timestamp = 6;
  string deviceInfo = 7;
  string ipAddress = 8;
} 