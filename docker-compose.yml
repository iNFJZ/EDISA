services:
  postgres:
    image: postgres:14
    container_name: auth-postgres
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: auth_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123456
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - microservice-network

  redis:
    image: redis
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - microservice-network

  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - microservice-network

  minio:
    image: minio/minio
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
    volumes:
      - minio-data:/data
    command: server --console-address ":9001" /data
    networks:
      - microservice-network

  auth-service:
    build:
      context: .
      dockerfile: Dockerfile
    platform: linux/amd64
    container_name: auth-service
    working_dir: /app/AuthService
    ports:
      - "5001:80"
      - "5003:5003"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=postgres;Port=5432;Database=auth_db;Username=postgres;Password=123456
      - ConnectionStrings__Redis=redis:6379
    depends_on:
      - postgres
      - redis
      - rabbitmq
    networks:
      - microservice-network
    command: dotnet AuthService.dll

  file-service:
    build:
      context: .
      dockerfile: Dockerfile
    platform: linux/amd64
    container_name: file-service
    working_dir: /app/FileService
    ports:
      - "5002:80"
      - "5004:5004"
    environment:
      - AuthService__Url=http://auth-service:5001
      - Minio__Endpoint=minio:9000
      - Minio__AccessKey=minio
      - Minio__SecretKey=minio123
      - Minio__BucketName=mybucket
      - Minio__UseSSL=false
      - RabbitMQ__HostName=rabbitmq
      - RabbitMQ__Port=5672
      - RabbitMQ__UserName=guest
      - RabbitMQ__Password=guest
      - RabbitMQ__VirtualHost=/
      - ASPNETCORE_ENVIRONMENT=Development
    depends_on:
      - auth-service
      - minio
      - rabbitmq
    networks:
      - microservice-network
    command: dotnet FileService.dll

  gateway-api:
    build:
      context: .
      dockerfile: Dockerfile
    platform: linux/amd64
    container_name: gateway-api
    working_dir: /app/GatewayApi
    ports:
      - "5050:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    depends_on:
      - auth-service
      - file-service
    networks:
      - microservice-network
    command: dotnet GatewayApi.dll

  email-service:
    build:
      context: .
      dockerfile: Dockerfile
    platform: linux/amd64
    container_name: email-service
    working_dir: /app/EmailService
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    depends_on:
      - rabbitmq
    networks:
      - microservice-network
    command: dotnet EmailService.dll
    volumes:
      - ./Shared/LanguageFiles:/app/Shared/LanguageFiles

  user-service:
    build:
      context: .
      dockerfile: Dockerfile
    platform: linux/amd64
    container_name: user-service
    working_dir: /app/UserService
    ports:
      - "5005:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=auth-postgres;Port=5432;Database=auth_db;Username=postgres;Password=123456
      - ConnectionStrings__Redis=redis:6379
      - AuthService__Url=http://auth-service:5001
      - RabbitMQ__HostName=rabbitmq
      - RabbitMQ__Port=5672
      - RabbitMQ__UserName=guest
      - RabbitMQ__Password=guest
      - RabbitMQ__VirtualHost=/
    depends_on:
      - postgres
      - redis
      - rabbitmq
      - auth-service
    networks:
      - microservice-network
    command: dotnet UserService.dll

  notification-service:
    build:
      context: .
      dockerfile: Dockerfile
    platform: linux/amd64
    container_name: notification-service
    working_dir: /app/NotificationService
    ports:
      - "5006:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings__DefaultConnection=Host=postgres;Port=5432;Database=notification_db;Username=postgres;Password=123456
      - ConnectionStrings__Redis=redis:6379
    depends_on:
      - postgres
      - redis
      - rabbitmq
    networks:
      - microservice-network
    command: dotnet NotificationService.dll

  grpc-server:
    build:
      context: .
      dockerfile: Dockerfile
    platform: linux/amd64
    container_name: grpc-server
    working_dir: /app/GrpcGreeter
    ports:
      - "5219:5219"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - GrpcEndpoints__AuthService=http://auth-service:5003
      - GrpcEndpoints__FileService=http://file-service:5004
    networks:
      - microservice-network
    command: dotnet GrpcGreeter.dll

  frontend:
    build:
      context: ./Frontend
      dockerfile: Dockerfile
    container_name: frontend
    ports:
      - "8080:80"
    depends_on:
      - gateway-api
      - notification-service
    networks:
      - microservice-network
    volumes:
      - ./Shared/LanguageFiles:/usr/share/nginx/html/Shared/LanguageFiles

volumes:
  pgdata:
  minio-data:
  redis-data:

networks:
  microservice-network:
    driver: bridge