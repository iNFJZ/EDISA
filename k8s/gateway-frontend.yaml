# Gateway API Deployment and Service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gateway-api
  namespace: edisa
spec:
  replicas: 2
  selector:
    matchLabels:
      app: gateway-api
  template:
    metadata:
      labels:
        app: gateway-api
    spec:
      containers:
      - name: gateway-api
        image: edisa:latest
        workingDir: /app/GatewayApi
        ports:
        - containerPort: 80
        env:
        - name: ASPNETCORE_ENVIRONMENT
          valueFrom:
            configMapKeyRef:
              name: edisa-config
              key: aspnetcore_environment
        - name: ASPNETCORE_URLS
          valueFrom:
            configMapKeyRef:
              name: edisa-config
              key: aspnetcore_urls
        - name: JwtSettings__Key
          valueFrom:
            secretKeyRef:
              name: edisa-secrets
              key: jwt_secret
        - name: JwtSettings__Issuer
          valueFrom:
            configMapKeyRef:
              name: edisa-config
              key: jwt_issuer
        - name: JwtSettings__Audience
          valueFrom:
            configMapKeyRef:
              name: edisa-config
              key: jwt_audience
        - name: JwtSettings__ExpiresInMinutes
          valueFrom:
            configMapKeyRef:
              name: edisa-config
              key: jwt_expires_in_minutes
        command: ["dotnet", "GatewayApi.dll"]
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        # Tạm thời comment out health checks để pods chạy ổn định
        # livenessProbe:
        #   httpGet:
        #     path: /health
        #     port: 80
        #   initialDelaySeconds: 30
        #   periodSeconds: 10
        # readinessProbe:
        #   httpGet:
        #     path: /health
        #     port: 80
        #   initialDelaySeconds: 5
        #   periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: gateway-api
  namespace: edisa
spec:
  selector:
    app: gateway-api
  ports:
  - port: 80
    targetPort: 80
  type: ClusterIP
---
# Frontend Deployment and Service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: edisa
spec:
  replicas: 2
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
      - name: frontend
        image: edisa-frontend:latest
        ports:
        - containerPort: 80
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        # Bật lại health checks khi có image thực tế
        # livenessProbe:
        #   httpGet:
        #     path: /
        #     port: 80
        #   initialDelaySeconds: 30
        #   periodSeconds: 10
        # readinessProbe:
        #   httpGet:
        #     path: /
        #     port: 80
        #   initialDelaySeconds: 5
        #   periodSeconds: 5
        volumeMounts:
        - name: language-files
          mountPath: /usr/share/nginx/html/Shared/LanguageFiles
      volumes:
      - name: language-files
        configMap:
          name: language-files-config
---
apiVersion: v1
kind: Service
metadata:
  name: frontend
  namespace: edisa
spec:
  selector:
    app: frontend
  ports:
  - port: 80
    targetPort: 80
  type: ClusterIP
